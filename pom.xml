<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.scoperetail.pom</groupId>
		<artifactId>oss-parent-pom</artifactId>
		<version>1.6</version>
		<relativePath />
	</parent>
	<groupId>com.scoperetail.fusion</groupId>
	<artifactId>fusion-connect-resources</artifactId>
	<version>0.1-SNAPSHOT</version>
	<name>${project.artifactId}</name>
	<description>Fusion connect resources</description>
	<url>https://github.com/scoperetail-io/${project.artifactId}</url>

	<properties>
		<fusion-connect-resources-core.version>0.1-SNAPSHOT</fusion-connect-resources-core.version>
		<spring.version>2.6.4</spring.version>
		<spring-cloud.version>3.1.1</spring-cloud.version>
		<spotless.version>2.10.0</spotless.version>
		<sonar.host.url>http://dev-ops.eastus2.cloudapp.azure.com/sonar/</sonar.host.url>
		<sonar.login>scoperetail</sonar.login>
		<sonar.password>scope2020!</sonar.password>
		<sonar.exclusions>
			com/**/**Test**.java
		</sonar.exclusions>
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<sonar.jacoco.reportPath>${project.basedir}/target/jacoco.exec</sonar.jacoco.reportPath>
		<sonar.language>java</sonar.language>
		<jacoco.maven.plugin.version>0.8.2</jacoco.maven.plugin.version>
	</properties>

	<scm>
		<developerConnection>
            scm:git:git@github.com:scoperetail-io/${project.artifactId}.git
        </developerConnection>
		<tag>HEAD</tag>
		<url>https://github.com/scoperetail-io/${project.artifactId}</url>
	</scm>

	<developers>
		<developer>
			<id>SI003</id>
			<name>Ravi Zadpide</name>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
		<developer>
			<id>SI002</id>
			<name>Amit Petkar</name>
			<roles>
				<role>Architect</role>
			</roles>
		</developer>
	</developers>

	<dependencies>
		<dependency>
			<groupId>com.scoperetail.fusion</groupId>
			<artifactId>fusion-connect-resources-core</artifactId>
			<version>${fusion-connect-resources-core.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
			<version>${spring-cloud.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-bootstrap</artifactId>
			<version>${spring-cloud.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<configuration>
					<propertyFile>src/main/resources/liquibase/liquibase-maven-plugin.properties</propertyFile>
					<changeLogFile>src/main/resources/changelog/changelog.xml</changeLogFile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<release>${java.version}</release>
					<!-- <annotationProcessorPaths> <path> <groupId>org.mapstruct</groupId> 
						<artifactId>mapstruct-processor</artifactId> <version>${org.mapstruct.version}</version> 
						</path> <path> <groupId>org.projectlombok</groupId> <artifactId>lombok</artifactId> 
						<version>${lombok.version}</version> </path> </annotationProcessorPaths> -->
					<generatedSourcesDirectory>${project.build.directory}/generated-sources</generatedSourcesDirectory>
					<layers>
						<enabled>true</enabled>
						<configuration>${project.basedir}/src/layers.xml</configuration>
					</layers>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>${spotless.version}</version>
				<configuration>
					<!-- optional: limit format enforcement to just the files changed by 
						this feature branch -->
					<ratchetFrom>master</ratchetFrom>
					<formats>
						<!-- you can define as many formats as you want, each is independent -->
						<format>
							<!-- define the files to apply to -->
							<includes>
								<include>*.md</include>
								<include>.gitignore</include>
							</includes>
							<!-- define the steps to apply to those files -->
							<trimTrailingWhitespace />
							<endWithNewline />
							<indent>
								<tabs>true</tabs>
								<spacesPerTab>4</spacesPerTab>
							</indent>
						</format>
					</formats>
					<!-- define a language-specific format -->
					<java>
						<!-- no need to specify files, inferred automatically, but you can 
							if you want -->

						<!-- apply a specific flavor of google-java-format -->
						<googleJavaFormat>
							<version>1.8</version>
							<style>GOOGLE</style>
						</googleJavaFormat>
					</java>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<scmCommentPrefix>[skip ci]</scmCommentPrefix>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.maven.plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<distributionManagement>
		<repository>
			<id>artifactory</id>
			<name>scope-artifactory-releases</name>
			<url>http://scopeartifactory.centralus.cloudapp.azure.com/artifactory/maven-release</url>
		</repository>
		<snapshotRepository>
			<id>artifactory</id>
			<name>scope-artifactory-snapshots</name>
			<url>http://scopeartifactory.centralus.cloudapp.azure.com/artifactory/maven-snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>artifactory</id>
			<name>scope-artifactory-virtual</name>
			<url>http://scopeartifactory.centralus.cloudapp.azure.com/artifactory/maven-virtual</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>maven-central</id>
			<name>maven</name>
			<url>https://repo.maven.apache.org/maven2/</url>
		</repository>
	</repositories>
</project>
